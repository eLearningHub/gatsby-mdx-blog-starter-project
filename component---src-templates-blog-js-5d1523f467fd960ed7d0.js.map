{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Categories","categories","map","category","key","to","Blog","data","site","allMdx","pageContext","pagination","page","nextPagePath","previousPagePath","posts","id","edges","find","edge","node","post","frontmatter","banner","sizes","childImageSharp","slug","title","date","excerpt","pageQuery"],"mappings":"4NAOMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACjB,kBAAC,WAAD,KACE,4BACGA,EAAWC,KAAI,SAAAC,GAAQ,OACtB,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAE,eAAiBF,GAAaA,UAoEjCG,UA7DF,SAAC,GAGP,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,KAAMC,EAEV,EAFUA,OAEV,IADJC,YAAeC,EACX,EADWA,WAAYV,EACvB,EADuBA,WAEnBW,EAAyCD,EAAzCC,KAAMC,EAAmCF,EAAnCE,aAAcC,EAAqBH,EAArBG,iBAEtBC,EAAQH,EAAKV,KAAI,SAAAc,GAAE,OACvBP,EAAOQ,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKJ,KAAOA,QAG7C,OACE,kBAAC,IAAD,CAAQR,KAAMA,GACZ,2DAC8B,IAC5B,kBAACR,EAAD,CAAYC,WAAYA,KAGzBc,EAAMb,KAAI,gBAASmB,EAAT,EAAGD,KAAH,OACT,yBAAKhB,IAAKiB,EAAKL,IACZK,EAAKC,YAAYC,QAChB,kBAAC,IAAD,CACEC,MAAOH,EAAKC,YAAYC,OAAOE,gBAAgBD,QAInD,4BACE,kBAAC,IAAD,CAAMnB,GAAIgB,EAAKC,YAAYI,MACxBL,EAAKC,YAAYK,QAItB,+BAAQN,EAAKC,YAAYM,MAEzB,2BAAIP,EAAKQ,SAET,kBAAC,IAAD,CAAMxB,GAAIgB,EAAKC,YAAYI,MAA3B,wBAIJ,6BAEA,2CAEE,4BACGb,GACC,4BACE,kBAAC,IAAD,CAAMR,GAAIQ,GAAV,cAIHC,GACC,4BACE,kBAAC,IAAD,CAAMT,GAAIS,GAAV,sBAWP,IAAMgB,EAAS","file":"component---src-templates-blog-js-5d1523f467fd960ed7d0.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/Layout';\nimport Link from '../components/Link';\n\nconst Categories = ({ categories }) => (\n  <Fragment>\n    <ul>\n      {categories.map(category => (\n        <li key={category}>\n          <Link to={`/categories/${category}`}>{category}</Link>\n        </li>\n      ))}\n    </ul>\n  </Fragment>\n);\n\nconst Blog = ({\n  data: { site, allMdx },\n  pageContext: { pagination, categories },\n}) => {\n  const { page, nextPagePath, previousPagePath } = pagination;\n\n  const posts = page.map(id =>\n    allMdx.edges.find(edge => edge.node.id === id),\n  );\n\n  return (\n    <Layout site={site}>\n      <div>\n        All categories on the blog:{' '}\n        <Categories categories={categories} />\n      </div>\n\n      {posts.map(({ node: post }) => (\n        <div key={post.id}>\n          {post.frontmatter.banner && (\n            <Img\n              sizes={post.frontmatter.banner.childImageSharp.sizes}\n            />\n          )}\n\n          <h2>\n            <Link to={post.frontmatter.slug}>\n              {post.frontmatter.title}\n            </Link>\n          </h2>\n\n          <small>{post.frontmatter.date}</small>\n\n          <p>{post.excerpt}</p>\n\n          <Link to={post.frontmatter.slug}>Continue Reading</Link>\n        </div>\n      ))}\n\n      <hr />\n\n      <div>\n        Pagination:\n        <ul>\n          {nextPagePath && (\n            <li>\n              <Link to={nextPagePath}>Next Page</Link>\n            </li>\n          )}\n\n          {previousPagePath && (\n            <li>\n              <Link to={previousPagePath}>Previous Page</Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...site\n    }\n    allMdx {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            banner {\n              childImageSharp {\n                sizes(maxWidth: 720) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            slug\n            categories\n            keywords\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}